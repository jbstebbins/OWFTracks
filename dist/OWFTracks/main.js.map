{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/growler/growler.component.css","webpack:///./src/app/components/growler/growler.component.html","webpack:///./src/app/components/growler/growler.component.ts","webpack:///./src/app/components/menu/menu.component.css","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/components/page-not-found/page-not-found.component.css","webpack:///./src/app/components/page-not-found/page-not-found.component.html","webpack:///./src/app/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/library/owf-api.ts","webpack:///./src/app/models/map-view-model.ts","webpack:///./src/app/models/menu-model.ts","webpack:///./src/app/models/preferences-model.ts","webpack:///./src/app/models/status-model.ts","webpack:///./src/app/modules/shared-services/shared-services.module.ts","webpack:///./src/app/modules/track/cot-minotaur/cot-minotaur.component.css","webpack:///./src/app/modules/track/cot-minotaur/cot-minotaur.component.html","webpack:///./src/app/modules/track/cot-minotaur/cot-minotaur.component.ts","webpack:///./src/app/modules/track/track-core.module.ts","webpack:///./src/app/modules/track/track-core/track-core.component.css","webpack:///./src/app/modules/track/track-core/track-core.component.html","webpack:///./src/app/modules/track/track-core/track-core.component.ts","webpack:///./src/app/services/action-notification.service.ts","webpack:///./src/app/services/config.service.ts","webpack:///./src/app/services/cot-minotaur.service.ts","webpack:///./src/app/services/map-messages.service.ts","webpack:///./src/app/services/preferences.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;ACvBA,+DAA+D,+H;;;;;;;;;;;ACA/D,uL;;;;;;;;;;;;;;;;;;;;ACAoE;AAC3B;AAGiB;AACyB;AAOnF;IAKC,sBAAoB,MAAc,EACzB,mBAA8C,EAC9C,aAA4B;QAFrC,iBA2BC;QA3BmB,WAAM,GAAN,MAAM,CAAQ;QACzB,wBAAmB,GAAnB,mBAAmB,CAA2B;QAC9C,kBAAa,GAAb,aAAa,CAAe;QANrC,UAAK,GAAG,WAAW,CAAC;QAEpB,eAAU,GAAW,WAAW,CAAC;QAKhC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,SAAS,CAC7C,oBAAU;YACT,OAAO,CAAC,GAAG,CAAI,UAAU,+BAA4B,CAAC,CAAC;YAEvD,8CAA8C;YAC9C,IAAI,UAAU,KAAK,cAAc,EAAE;gBAClC,KAAI,CAAC,UAAU,GAAG,aAAa,CAAC;gBAEhC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBACpB,OAAO,EAAE;4BACV,OAAO,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC;4BAC7E,WAAW,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC;4BACxC,WAAW,EAAE,CAAC,EAAE,CAAC;yBACf;qBACF,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;wBACrB,OAAO,EAAE;4BACR,OAAO,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAK,UAAU,8BAA2B,EAAE,CAAC;yBACrF;qBACD,CAAC,CAAC,CAAC;aACJ;QACF,CAAC,CACD,CAAC;IACH,CAAC;IAED,+BAAQ,GAAR;QACC,oDAAoD;QACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACrB,OAAO,EAAE;oBACR,OAAO,EAAE,CAAC,SAAS,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC;iBAClE;aACD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAW,GAAX;IACA,CAAC;IAED,iCAAU,GAAV;QACC,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IACpD,CAAC;IAjDW,YAAY;QALxB,+DAAS,CAAC;YACV,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEnC,CAAC;+EAM2B,sDAAM;YACJ,+FAAyB;YAC/B,sEAAa;OAPzB,YAAY,CAkDxB;IAAD,mBAAC;CAAA;AAlDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AAEc;AACR;AACgC;AACvB;AAET;AAC2D;AAExD;AACF;AACJ;AACE;AACE;AAEiB;AACS;AACmB;AAEzB;AAEpE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,mDAAmD,EAAE;IACtF,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE;IAChD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,uFAAgB,EAAE;IACtD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,0GAAqB,EAAE,MAAM,EAAE,aAAa,EAAE;IACvE,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,0GAAqB,EAAE,MAAM,EAAE,aAAa,EAAE;IACvE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE;CACtC,CAAC;AA4BF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA1BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8EAAa;gBACb,0GAAqB;gBACrB,uFAAgB;gBAChB,gGAAgB;aACjB;YACD,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,EACzB,EAAE,yBAAyB,CAAE,CAAC;gBAChC,uEAAa;gBACb,4FAAuB;gBACvB,qEAAgB;gBAChB,+DAAc;gBACd,8DAAa;gBACb,0DAAW;gBACX,8DAAa;gBACb,4DAAY;gBACZ,iFAAe;gBACf,4DAAY,CAAC,cAAc,CAAC,EAAE,CAAC;gBAC/B,oGAAoB,CAAC,OAAO,EAAE;aAC/B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1DtB,0CAA0C,4BAA4B,OAAO,6EAA6E,4BAA4B,OAAO,mDAAmD,uiB;;;;;;;;;;;ACAhP,sCAAsC,kBAAkB,c;;;;;;;;;;;;;;;;;;;ACAN;AACD;AAEJ;AAQ7C;IAEE,0BAAoB,KAAqB,EAAU,cAA8B;QAA7D,UAAK,GAAL,KAAK,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;IACjF,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;gBACjC,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;aAC9F;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAXU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,oHAAuC;YAEvC,SAAS,EAAE,CAAC,0DAAc,CAAC;;SAC5B,CAAC;+EAG2B,8DAAc,EAA0B,0DAAc;OAFtE,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;ACX7B,+DAA+D,uJ;;;;;;;;;;;ACA/D,qHAAqH,YAAY,qM;;;;;;;;;;;;;;;;;;;ACApE;AAG0B;AACnC;AAOpD;IAKE,uBAAoB,mBAA8C;QAA9C,wBAAmB,GAAnB,mBAAmB,CAA2B;QAHlE,eAAU,GAAW,QAAQ,CAAC;QAI5B,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC,UAAU,CAAC,SAAS,CAC1D,kBAAQ;YACN,OAAO,CAAC,GAAG,CAAI,QAAQ,gCAA6B,CAAC,CAAC;QACxD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,4DAAS,EAAE,CAAC;QAEjC,6BAA6B;QAC7B,IAAI,KAAK,GAAQ,IAAI,CAAC,SAAS,CAAC;QAEhC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,sBAAsB;QACrF,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,uBAAuB;QACtF,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,uBAAuB;QACtF,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,gBAAgB;IACjF,CAAC;IAED,mCAAW,GAAX;QACE,+CAA+C;QAC/C,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,kCAAU,GAAV,UAAW,KAAK;QACd,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;QACnC,OAAO,CAAC,GAAG,CAAI,KAAK,CAAC,IAAI,CAAC,KAAK,kCAA+B,CAAC,CAAC;IAClE,CAAC;IAED,qCAAa,GAAb,UAAc,KAAa;QACzB,IAAI,KAAK,KAAK,EAAE,EAAE;YAChB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QAED,OAAO,CAAC,GAAG,CAAC,mBAAiB,KAAO,CAAC,CAAC;QACtC,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IA7CU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2GAAoC;;SAErC,CAAC;+EAMyC,+FAAyB;OALvD,aAAa,CA+CzB;IAAD,oBAAC;CAAA;AA/CyB;;;;;;;;;;;;ACX1B,+DAA+D,+K;;;;;;;;;;;ACA/D,wBAAwB,aAAa,M;;;;;;;;;;;;;;;;;;ACAa;AACO;AAOzD;IAGE,+BAAoB,KAAqB,EAAU,MAAc;QAA7C,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFjE,gBAAW,GAAW,EAAE,CAAC;IAGzB,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAPU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,yIAA8C;;SAE/C,CAAC;+EAI2B,8DAAc,EAAkB,sDAAM;OAHtD,qBAAqB,CASjC;IAAD,4BAAC;CAAA;AATiC;;;;;;;;;;;;;ACLlC;AAAA;AAAA;IAIC;QAFA,sBAAiB,GAAa,EAAE,CAAC;IAEjB,CAAC;IAEV,2BAAU,GAAjB;QACC,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC;YACjE,wBAAwB,EAAE,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE;YAC7D,QAAQ,EAAE,IAAI;YAEd,0DAA0D;YAC1D,4CAA4C;YAC5C,oBAAoB,EAAE,UAAU,MAAc,EAAE,GAAG;gBAClD,IAAI,GAAG,CAAC,SAAS,KAAK,aAAa,EAAE;oBACpC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAChC;YACF,CAAC;SACD,CAAC,CAAC;QACH,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC;YAClD,MAAM,EAAE,CAAC,aAAa,CAAC;SACvB,CAAC,CAAC;IACJ,CAAC;IAEO,+BAAc,GAAtB,UAAuB,MAAc,EAAE,GAAG;QACzC,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,8CAA8C;QAC9C,IAAI,CAAC,sBAAsB,CAAC,yBAAyB,CAAC;YACrD,MAAM,EAAE,CAAC,aAAa,CAAC;YACvB,QAAQ,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,gCAAgC;gBAEhC,wBAAwB;gBACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,iBAAO;oBACrC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;YAC3C,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;IAEM,uCAAsB,GAA7B,UAA8B,OAAe,EAAE,QAAa;QAC3D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAEM,mCAAkB,GAAzB,UAA0B,OAAe,EAAE,IAAU;QACpD,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,qCAAoB,GAA3B;QACC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,EAAC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;IAClE,CAAC;IACF,aAAC;AAAD,CAAC;;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;IAaI,sBAAY,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,KAAa,EAAE,IAAY,EAClF,OAAe,EAAE,gBAAwB,EAAE,gBAAwB,EAAE,KAAa,EAClF,SAAiB,EAAE,IAAkB;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB,CAAC;IACF,mBAAC;AAAD,CAAC;;AAED;IAII,gBAAY,SAAiB,EAAE,SAAiB;QAC5C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IACL,aAAC;AAAD,CAAC;;AAED;IAII,gBAAY,GAAW,EAAE,GAAW;QAChC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IACL,aAAC;AAAD,CAAC;;AAED;IAKI,sBAAY,QAAkB,EAAE,SAAqB,EAAE,SAAiB;QACpE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS;IAC9B,CAAC;IACL,mBAAC;AAAD,CAAC;;AAED;IAII,kBAAY,KAAa,EAAE,GAAW;QAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IACL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACpED;AAAA;AAAA;IAGI;QACI,IAAI,CAAC,KAAK,GAAG,CAAC;gBACV,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,uBAAuB;gBAC7B,KAAK,EAAE,CAAC;wBACJ,KAAK,EAAE,aAAa;wBACpB,IAAI,EAAE,kBAAkB;wBACxB,OAAO,EAAE,IAAI;qBAChB;oBACD;wBACI,KAAK,EAAE,cAAc;wBACrB,IAAI,EAAE,kBAAkB;wBACxB,OAAO,EAAE,IAAI;qBAChB;oBACD;wBACI,KAAK,EAAE,gBAAgB;wBACvB,IAAI,EAAE,kBAAkB;wBACxB,OAAO,EAAE,IAAI;qBAChB;iBACA;aACJ;YACD;gBACI,KAAK,EAAE,MAAM;gBACb,IAAI,EAAE,sBAAsB;gBAC5B,KAAK,EAAE,CAAC;wBACJ,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,kBAAkB;wBACxB,OAAO,EAAE,IAAI;qBAChB;iBACA;aACJ;SACA,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtCD;AAAA;AAAA;IAKC,0BAAY,SAAiB,EAAE,IAAY,EAAE,KAAa;QACzD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IACF,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACVD;AAAA;AAAA;IAGC,qBAAY,KAAa,EAAE,MAAc;QACxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IACF,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACP6D;AAGyB;AACzB;AACU;AACC;AAGzE;IAAA;IAOC,CAAC;6BAPW,oBAAoB;IACxB,4BAAO,GAAd;QACE,OAAO;YACL,QAAQ,EAAE,sBAAoB;YAC9B,SAAS,EAAE,CAAC,+FAAyB,EAAE,sEAAa,EAAE,gFAAkB,EAAE,iFAAkB,CAAC;SAC9F,CAAC;IACJ,CAAC;;IANU,oBAAoB;QADhC,8DAAQ,CAAC,EAAE,CAAC;OACA,oBAAoB,CAO/B;IAAD,2BAAC;CAAA;AAP+B;AAS1B,IAAM,gBAAgB,GAAG,EAAE,CAAC;;;;;;;;;;;;AClBnC,+DAA+D,+K;;;;;;;;;;;ACA/D,oR;;;;;;;;;;;;;;;;;;;;;;;;ACA+E;AACS;AACnC;AAGL;AAGiB;AACW;AACA;AAU5E,2DAA2D;AAM3D;IAcE,8BAAoB,aAA4B,EACtC,iBAAqC,EACrC,iBAAqC;QAF3B,kBAAa,GAAb,aAAa,CAAe;QACtC,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,sBAAiB,GAAjB,iBAAiB,CAAoB;QAf/C,WAAM,GAAgB,IAAI,CAAC;QAC3B,kBAAa,GAAiB,IAAI,CAAC;QACnC,cAAS,GAAQ,EAAE,CAAC;QAIpB,sBAAiB,GAAQ,EAAE,CAAC;QAE5B,YAAO,GAAU,EAAE,CAAC;QACpB,iBAAY,GAAU,EAAE,CAAC;QAEzB,cAAS,GAAG,YAAY,CAAC;QAKvB,IAAI,CAAC,WAAW,GAAgB;YAC9B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE;YACnC,OAAO,EAAE;gBACP,eAAe,EAAE,IAAI;aACtB;YACD,UAAU,EAAE,IAAI;SACjB,CAAC;IACJ,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAyBC;QAxBC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAE7C,0BAA0B;QAC1B,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,SAAS,CAC7C,kBAAQ;YACN,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC,SAAS,CAChE,iBAAO;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAEL,kCAAkC;QAClC,UAAU,CAAC;YACT,qDAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CACjB,gEAAS,CAAC,CAAC,CAAC,EACZ,gEAAS,CAAC,cAAM,YAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,EAArC,CAAqC,CAAC,CACvD,CAAC,SAAS,CAAC,kBAAQ;gBAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAEtB,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,0CAAW,GAAX;QACE,+CAA+C;QAC/C,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;IAEO,8CAAe,GAAvB,UAAwB,QAAuB,EAAE,OAAiB;QAAlE,iBA4EC;QA3EC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAEpB,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAK;gBAC7B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAEjC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;oBAClB,EAAE,EAAE,KAAK,CAAC,EAAE;oBACZ,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI;oBAChC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;oBAC3B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;oBAC3B,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ;oBACnC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK;oBAC7B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,UAAU;oBACvC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM;oBAC/B,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,SAAS;oBACrC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;oBAC3B,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK;oBAC7B,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG;oBACzB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ;oBACnC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM;oBAC/B,cAAc,EAAE,KAAK,CAAC,UAAU,CAAC,cAAc;iBAChD,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,SAAO,GAAU,EAAE,EAAE,YAAU,GAAU,EAAE,EAAE,UAAU,GAAU,EAAE,CAAC;YAExE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,eAAK;gBAC7B,IAAI,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;oBACvC,YAAU,CAAC,IAAI,CAAC;wBACd,EAAE,EAAE,KAAK,CAAC,EAAE;wBACZ,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI;wBAChC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;wBAC3B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;wBAC3B,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ;wBACnC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK;wBAC7B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,UAAU;wBACvC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM;wBAC/B,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,SAAS;wBACrC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;wBAC3B,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK;wBAC7B,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG;wBACzB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ;wBACnC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM;wBAC/B,cAAc,EAAE,KAAK,CAAC,UAAU,CAAC,cAAc;qBAChD,CAAC,CAAC;iBACJ;qBAAM;oBACL,SAAO,CAAC,IAAI,CAAC;wBACX,EAAE,EAAE,KAAK,CAAC,EAAE;wBACZ,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI;wBAChC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;wBAC3B,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;wBAC3B,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ;wBACnC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK;wBAC7B,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,UAAU;wBACvC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM;wBAC/B,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,SAAS;wBACrC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI;wBAC3B,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,KAAK;wBAC7B,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,GAAG;wBACzB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC,QAAQ;wBACnC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM;wBAC/B,cAAc,EAAE,KAAK,CAAC,UAAU,CAAC,cAAc;qBAChD,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,SAAO,EAAE,YAAU,EAAE,UAAU,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,SAAO,EAAE,MAAM,EAAE,YAAU,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;SACzF;IACH,CAAC;IAEO,+CAAgB,GAAxB;QACE,IAAI,CAAC,iBAAiB,GAAG;YACvB,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE;YACxC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YACnD,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YACnD,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YACvD,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YACpD,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YACzD,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YACrD,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;YACtC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;YACnD,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;YAClC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;YAChC,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE;YACrC,EAAE,KAAK,EAAE,QAAQ,EAAE;YACnB,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,IAAI,EAAE;SAC9C,CAAC;QAEF,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,0CAAW,GAAX,UAAY,KAAK;QACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,GAAG,UAAS,IAAI;YAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED,kDAAmB,GAAnB,UAAoB,MAAM;QACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAnKuB;QAAvB,+DAAS,CAAC,WAAW,CAAC;wEAAS,6DAAa;wDAAC;IALnC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sIAA4C;;SAE7C,CAAC;+EAemC,sEAAa;YACnB,iFAAkB;YAClB,iFAAkB;OAhBpC,oBAAoB,CAyKhC;IAAD,2BAAC;CAAA;AAzKgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BQ;AACM;AACQ;AAEL;AACF;AACN;AACE;AAEG;AACkC;AAEV;AACM;AAE7E,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,oFAAkB,EAAE,MAAM,EAAE,aAAa;QACrE,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,0FAAoB;aAChC;SACF;KACF;CACF,CAAC;AAgBF;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAd3B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,oFAAkB,EAAE,0FAAoB,CAAC;YACxD,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,SAAS,CAAC;gBAChC,+DAAc;gBACd,6DAAa;gBACb,uDAAU;gBACV,yDAAW;gBACX,4DAAY,CAAC,cAAc,CAAC,EAAE,CAAC;gBAC/B,4FAAoB,CAAC,OAAO,EAAE;aAC/B;YACD,OAAO,EAAE,CAAC,oFAAkB,EAAE,0FAAoB,CAAC;SACpD,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzC5B,+DAA+D,2K;;;;;;;;;;;ACA/D,kD;;;;;;;;;;;;;;;;;ACA6D;AAO7D;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IAED,wCAAW,GAAX;IACA,CAAC;IARU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,gIAA0C;;SAE3C,CAAC;;OACW,kBAAkB,CAU9B;IAAD,yBAAC;CAAA;AAV8B;;;;;;;;;;;;;;;;;;;ACPY;AACZ;AAK/B;IASE;QARA,4BAA4B;QACpB,oBAAe,GAAG,IAAI,4CAAO,EAAU,CAAC;QACxC,qBAAgB,GAAG,IAAI,4CAAO,EAAU,CAAC;QAEjD,4BAA4B;QAC5B,eAAU,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;QACjD,gBAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;IAEnC,CAAC;IAEjB,2BAA2B;IAC3B,mDAAe,GAAf,UAAgB,IAAY;QAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,oDAAgB,GAAhB,UAAiB,IAAY;QAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAlBU,yBAAyB;QAHrC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,yBAAyB,CAmBrC;IAAD,gCAAC;CAAA;AAnBqC;;;;;;;;;;;;;;;;;;;;;ACNK;AACE;AAC4B;AACV;AAM/D,IAAM,WAAW,GAAG;IACnB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CAChE,CAAC;AAKF;IAKC,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,WAAM,GAA4B,IAAI,CAAC;QACvC,gBAAW,GAAgB,IAAI,CAAC;QACxB,YAAO,GAAG,oBAAoB,CAAC;QAGtC,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAEO,sCAAc,GAAtB;QAAA,iBAUC;QATA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI;aACrB,GAAG,CAAc,IAAI,CAAC,OAAO,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACxD,IAAI,CACJ,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,EAClD,0DAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAEpB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAC1B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,iCAAS,GAAT;QACC,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAEO,mCAAW,GAAnB,UAAuB,SAAuB,EAAE,MAAU;QAAnC,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEjB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACxB,CAAC,CAAC;IACH,CAAC;IAlCW,aAAa;QAHzB,gEAAU,CAAC;YACX,UAAU,EAAE,MAAM;SAClB,CAAC;+EAMyB,+DAAU;OALxB,aAAa,CAmCzB;IAAD,oBAAC;CAAA;AAnCyB;;;;;;;;;;;;;;;;;;;;;;;AChBiB;AACqB;AACS;AACV;AASd;AACW;AAW5D;IAQE,4BAAoB,IAAgB,EAC1B,aAA4B,EAC5B,iBAAqC;QAF3B,SAAI,GAAJ,IAAI,CAAY;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAoB;QAT/C,4EAA4E;QAC5E,8EAA8E;QAC9E,aAAQ,GAAW,EAAE,CAAC;QACtB,cAAS,GAAkB,IAAI,CAAC;QAChC,gBAAW,GAAY,KAAK,CAAC;QAC7B,WAAM,GAAgB,IAAI,CAAC;QAMzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAED,yCAAY,GAAZ;QAAA,iBAiBC;QAhBC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,OAAO,EAAE,UAAoB;YAC7B,eAAe,EAAE,IAAI;SACtB,CAAC;QAEF,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI;aACnB,GAAG,CAAM,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;aACpC,IAAI,CACH,0DAAG,CAAC,aAAG,IAAM,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAC1C,0DAAG,CAAC,UAAC,IAAS,IAAK,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,EAA1B,CAA0B,CAAC,EAC9C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAEtD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,4CAAe,GAAvB,UAAwB,QAAQ;QAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAEO,wCAAW,GAAnB,UAAuB,SAAuB,EAAE,MAAU;QAAnC,mDAAuB;QAC5C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAhDU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAS0B,+DAAU;YACX,6DAAa;YACT,wEAAkB;OAVpC,kBAAkB,CAiD9B;IAAD,yBAAC;CAAA;AAjD8B;;;;;;;;;;;;;;;;;;;;;ACxBY;AACqB;AAGpB;AAIV;AAQlC;IAIE;QAHA,WAAM,GAAG,IAAI,uDAAM,EAAE,CAAC;QACtB,kBAAa,GAA6B,IAAI,CAAC;QAG7C,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEO,8CAAiB,GAAzB;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,GAAG,IAAI,+CAAU,CAAe,UAAC,QAAQ;YACzD,KAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;YACtG,KAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAU,GAAV;QACE,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,iDAAoB,GAApB,UAAqB,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO;QACjD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;QAE5C,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,OAAO,GAAG,IAAI,6DAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,OAAO,GAAG,IAAI,6DAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEjE,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,OAAO,CAAC,UAAU,EAAE;YACtB,IAAI,SAAS,GAAG,IAAI,+DAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC/E,IAAI,YAAU,GAAe,IAAI,CAAC;YAClC,IAAI,OAAO,CAAC,UAAU,CAAC,SAAS,EAAE;gBAChC,YAAU,GAAG,EAAE,CAAC;gBAEhB,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAO;oBAChD,IAAI,EAAE,GAAG,IAAI,+DAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClD,YAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;aACJ;YAED,KAAK,GAAG,IAAI,mEAAY,CAAC,SAAS,EAAE,YAAU,EAAE,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SAC/E;QAED,IAAI,aAAa,GAAG,IAAI,mEAAY,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EACjF,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,gBAAgB,EACtF,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAE3C,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IAhDU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CAiD9B;IAAD,yBAAC;CAAA;AAjD8B;;;;;;;;;;;;;;;;;;;;;;;AChBY;AACqB;AAED;AAIV;AAEU;AAEd;AASjD;IAKE,4BAAoB,IAAgB,EAC1B,aAA4B;QADlB,SAAI,GAAJ,IAAI,CAAY;QAC1B,kBAAa,GAAb,aAAa,CAAe;QALtC,WAAM,GAA4B,IAAI,CAAC;QACvC,gBAAW,GAAiC,IAAI,CAAC;QACjD,WAAM,GAAgB,IAAI,CAAC;QAIvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IACjD,CAAC;IAED,0CAAa,GAAb,UAAc,SAAS,EAAE,IAAI;QAA7B,iBAMC;QALC,IAAI,CAAC,WAAW,GAAG,IAAI,+CAAU,CAAC,UAAC,QAAQ;YACzC,KAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEO,+CAAkB,GAA1B,UAA2B,QAAQ,EAAE,SAAS,EAAE,IAAI;QAClD,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC;YAChC,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;YAChE,SAAS,EAAE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;SACjE,CAAC,CAAC;IACL,CAAC;IAEO,wDAA2B,GAAnC,UAAoC,QAAQ,EAAE,QAAQ;QACpD,IAAI,UAAU,GAAG,IAAI,0EAAgB,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEzF,OAAO,CAAC,GAAG,CAAC,mDAAmD,EAAE,UAAU,CAAC,CAAC;QAC7E,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IAEO,wDAA2B,GAAnC,UAAoC,QAAQ,EAAE,KAAK,EAAE,MAAM;QACzD,IAAI,UAAU,GAAqB,IAAI,CAAC;QAExC,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC5E,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC;IAED,0CAAa,GAAb,UAAc,SAAS,EAAE,IAAI,EAAE,KAAK;QAApC,iBAMC;QALC,IAAI,CAAC,MAAM,GAAG,IAAI,+CAAU,CAAC,UAAC,QAAQ;YACpC,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAEO,4CAAe,GAAvB,UAAwB,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK;QACtD,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC;YAChC,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAC5B,SAAS,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;YAC3D,SAAS,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;SAC1D,CAAC,CAAC;IACL,CAAC;IAEO,mDAAsB,GAA9B,UAA+B,QAAQ,EAAE,SAAS;QAChD,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAEzC,OAAO,CAAC,GAAG,CAAC,uDAAuD,EAAE,SAAS,CAAC,CAAC;QAChF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAEO,iDAAoB,GAA5B,UAA6B,QAAQ,EAAE,KAAK,EAAE,MAAM;QAClD,IAAI,OAAO,GAAG,IAAI,gEAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAE7C,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC9E,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAvEU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU;YACX,6DAAa;OAN3B,kBAAkB,CAwE9B;IAAD,yBAAC;CAAA;AAxE8B;;;;;;;;;;;;;ACpB/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAE5B;AACkB;AAK/C,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC3B,oEAAc,EAAE,CAAC;CACjB;AAED,qCAAqC;AACrC,mCAAE,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;IAClB,GAAG,CAAC,KAAK,CAAC;QACT,IAAI,MAAM,GAAG,IAAI,2DAAM,EAAE,CAAC;QAC1B,MAAM,CAAC,UAAU,EAAE,CAAC;QAEpB,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;aACjD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/track/track-core.module\": [\n\t\t\"./src/app/modules/track/track-core.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-menu></app-menu>\\n<router-outlet></router-outlet>\\n<router-outlet name=\\\"trackOutlet\\\"></router-outlet>\\n<router-outlet name=\\\"errorOutlet\\\"></router-outlet>\\n\"","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ConfigModel } from './models/config-model';\nimport { ConfigService } from './services/config.service';\nimport { ActionNotificationService } from './services/action-notification.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\ttitle = 'OWFWidget';\n\n\tmenuOption: string = 'AppConfig';\n\n\tconstructor(private router: Router,\n\t\tprivate notificationService: ActionNotificationService,\n\t\tprivate configService: ConfigService) {\n\t\tthis.notificationService.subscriber$.subscribe(\n\t\t\tactionName => {\n\t\t\t\tconsole.log(`${actionName}, received by AppComponent`);\n\n\t\t\t\t// check the menu item pressed and take action\n\t\t\t\tif (actionName === \"Connect REST\") {\n\t\t\t\t\tthis.menuOption = 'ServiceRest';\n\n\t\t\t\t\tthis.router.navigate([{\n\t\t\t\t\t  outlets: {\n\t\t\t\t\t\tprimary: ['message', 'notice', { message: 'Displaying Status information!' }],\n\t\t\t\t\t\ttrackOutlet: ['service', 'connect.rest'],\n\t\t\t\t\t\terrorOutlet: ['']\n\t\t\t\t\t  }\n\t\t\t\t\t}]);\t\t  \n\t\t\t\t} else {\n\t\t\t\t\tthis.router.navigate([{\n\t\t\t\t\t\toutlets: {\n\t\t\t\t\t\t\tprimary: ['message', 'notice', { message: `${actionName} received by AppComponent` }]\n\t\t\t\t\t\t}\n\t\t\t\t\t}]);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\t\t// this is required to initiate router for messaging\n\t\tthis.router.navigate([{\n\t\t\toutlets: {\n\t\t\t\tprimary: ['message', 'notice', { message: 'Application Ready!!' }]\n\t\t\t}\n\t\t}]);\n\t}\n\n\tngOnDestroy() {\n\t}\n  \n\tnotifyMenu() {\n\t\tthis.notificationService.publisherAction('New File');\n\t\tconsole.log('New File, pressed from AppComponent');\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedServicesModule, SharedComponents } from './modules/shared-services/shared-services.module';\n\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { MenubarModule } from 'primeng/menubar';\n\nimport { MenuComponent } from './components/menu/menu.component';\nimport { GrowlerComponent } from './components/growler/growler.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\nimport { TrackCoreModule } from './modules/track/track-core.module';\n\nconst routes: Routes = [\n  { path: 'service', loadChildren: './modules/track/track-core.module#TrackCoreModule' },\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  { path: 'message/:type', component: GrowlerComponent },\n  { path: '**', component: PageNotFoundComponent, outlet: 'trackOutlet' },\n  { path: '**', component: PageNotFoundComponent, outlet: 'errorOutlet' },\n  { path: '**', redirectTo: 'message' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    PageNotFoundComponent,\n    GrowlerComponent,\n    SharedComponents\n  ],\n  imports: [\n    RouterModule.forRoot(routes,\n      { /* enableTracing: true */ }),\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MessagesModule,\n    MessageModule,\n    ToastModule,\n    MenubarModule,\n    ButtonModule,\n    TrackCoreModule,\n    AgGridModule.withComponents([]),\n    SharedServicesModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \":host ::ng-deep button {\\r\\n    margin-right: .25em;\\r\\n  }\\r\\n  \\r\\n  :host ::ng-deep .ui-message,\\r\\n  :host ::ng-deep .ui-inputtext {\\r\\n    margin-right: .25em;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9ncm93bGVyL2dyb3dsZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtFQUNyQjs7RUFFQTs7SUFFRSxtQkFBbUI7RUFDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2dyb3dsZXIvZ3Jvd2xlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IC4yNWVtO1xyXG4gIH1cclxuICBcclxuICA6aG9zdCA6Om5nLWRlZXAgLnVpLW1lc3NhZ2UsXHJcbiAgOmhvc3QgOjpuZy1kZWVwIC51aS1pbnB1dHRleHQge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAuMjVlbTtcclxuICB9XHJcbiJdfQ== */\"","module.exports = \"<p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-growler',\n  templateUrl: './growler.component.html',\n  styleUrls: ['./growler.component.css'],\n  providers: [MessageService]\n})\nexport class GrowlerComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params.hasOwnProperty('type')) {\n        this.messageService.add({ severity: 'success', summary: 'info', detail: params['message'] });\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWVudS9tZW51LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p-menubar [model]=\\\"menuItems.items\\\">\\n  <div>\\n    <input type=\\\"text\\\" #search placeholder=\\\"{{searchText}}\\\" (keyup.enter)=\\\"onSearchEnter(search.value)\\\">\\n    <button pButton icon=\\\"fa fa-sign-out\\\" style=\\\"margin-left:.25em\\\" (click)=\\\"onSearchEnter(search.value)\\\"></button>\\n  </div>\\n</p-menubar>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ActionNotificationService } from '../../services/action-notification.service';\nimport { MenuModel } from '../../models/menu-model';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit, OnDestroy {\n  menuItems: MenuModel;\n  searchText: string = 'Search';\n  subscription: Subscription;\n\n  constructor(private notificationService: ActionNotificationService) {\n    this.subscription = notificationService.publisher$.subscribe(\n      itemName => {\n        console.log(`${itemName}, received by MenuComponent`);\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.menuItems = new MenuModel();\n\n    // add commands to menu model\n    let items: any = this.menuItems;\n\n    items.items[0].items[0].command = this.notifyMenu.bind(this);  // Service -> Load CSV\n    items.items[0].items[1].command = this.notifyMenu.bind(this);  // Service -> Load Rest\n    items.items[0].items[2].command = this.notifyMenu.bind(this);  // Service -> Load Rest\n    items.items[1].items[0].command = this.notifyMenu.bind(this);  // help -> about\n  }\n\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscription.unsubscribe();\n  }\n\n  notifyMenu(event) {\n    this.notificationService.subscriberAction(event.item.label);\n    this.searchText = event.item.label;\n    console.log(`${event.item.label}, pressed from MenuComponent `);\n  }\n\n  onSearchEnter(value: string) {\n    if (value === '') {\n      this.searchText = 'Search';\n    } else {\n      this.searchText = value;\n    }\n\n    console.log(`search value: ${value}`);\n    this.notificationService.subscriberAction(value);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZS1ub3QtZm91bmQvcGFnZS1ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>{{description}}</h1>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n  description: string = '';\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","declare var OWF: any;\ndeclare var Ozone: any;\n\nexport class OwfApi {\n\tprivate _WidgetStateController: any;\n\tsubcribedChannels: string[] = [];\n\n\tconstructor() { }\n\n\tpublic initialize(): void {\n\t\tlet self = this;\n\n\t\tthis._WidgetStateController = Ozone.state.WidgetState.getInstance({\n\t\t\twidgetEventingController: Ozone.eventing.Widget.getInstance(),\n\t\t\tautoInit: true,\n\n\t\t\t// this is fired on any event that you are registered for.\n\t\t\t// the msg object tells us what event it was\n\t\t\tonStateEventReceived: function (sender: String, msg) {\n\t\t\t\tif (msg.eventName === 'beforeclose') {\n\t\t\t\t\tself.shutdownWidget(null, null);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._WidgetStateController.addStateEventOverrides({\n\t\t\tevents: ['beforeclose']\n\t\t});\n\t}\n\n\tprivate shutdownWidget(sender: String, msg): void {\n\t\tlet self = this;\n\n\t\t// remove listener override to prevent looping\n\t\tthis._WidgetStateController.removeStateEventOverrides({\n\t\t\tevents: ['beforeclose'],\n\t\t\tcallback: function () {\n\t\t\t\tconsole.log('.. widget shutdown!!');\n\t\t\t\t// unpublish active track layers\n\n\t\t\t\t// unsubcribe the events\n\t\t\t\tself.subcribedChannels.forEach(element => {\n\t\t\t\t\tOWF.Eventing.unsubscribe(element);\n\t\t\t\t});\n\n\t\t\t\tself._WidgetStateController.closeWidget();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic addChannelSubscription(channel: string, callback: any): void {\n\t\tthis.subcribedChannels.push(channel);\n\t\tOWF.Eventing.subscribe(channel, callback);\n\t}\n\n\tpublic sendChannelRequest(channel: string, data?: any): void {\n\t\tOWF.Eventing.publish(channel, JSON.stringify(data));\n\t}\n\n\tpublic requestMapViewStatus(): void {\n\t\tthis.sendChannelRequest(\"map.status.request\", {types: [\"view\"]});\n\t}\n}\n","export class MapViewModel {\n    bounds: Bounds;\n    center: LatLon;\n    range: number;\n    scale: number;\n    zoom: number;\n    basemap: string;\n    spatialReference: number;\n    coordinateFormat: string;\n    mapId: number;\n    requestor: string;\n    time: TimeSpanTime;\n\n    constructor(bounds: Bounds, center: LatLon, range: number, scale: number, zoom: number, \n        basemap: string, spatialReference: number, coordinateFormat: string, mapId: number,\n        requestor: string, time: TimeSpanTime) {\n        this.bounds = bounds;\n        this.center = center;\n        this.range = range;\n        this.scale = scale;\n        this.zoom = zoom;\n        this.basemap = basemap;\n        this.spatialReference = spatialReference;\n        this.coordinateFormat = coordinateFormat;\n        this.mapId = mapId;\n        this.requestor = requestor;\n        this.time = time;\n\t}\n}\n\nexport class Bounds {\n    southWest: LatLon;\n    northEast: LatLon;\n\n    constructor(southWest: LatLon, northEast: LatLon) {\n        this.southWest = southWest;\n        this.northEast = northEast;\n    }\n}\n\nexport class LatLon {\n    lat: number;\n    lon: number;\n\n    constructor(lat: number, lon: number) {\n        this.lat = lat;\n        this.lon = lon;\n    }\n}\n\nexport class TimeSpanTime {\n    timeSpan: TimeSpan;\n    timeSpans: TimeSpan[];\n    timeStamp: string;\n\n    constructor(timeSpan: TimeSpan, timeSpans: TimeSpan[], timeStamp: string) {\n        this.timeSpan = timeSpan;\n        this.timeSpans = timeSpans;\n        this.timeStamp = timeStamp\n    }\n}\n\nexport class TimeSpan {\n    begin: string;\n    end: string;\n\n    constructor(begin: string, end: string) {\n        this.begin = begin;\n        this.end = end;\n    }\n}","import { MenuItem } from 'primeng/api';\n\nexport class MenuModel {\n    items: MenuItem[];\n\n    constructor() {\n        this.items = [{\n            label: 'Service',\n            icon: 'pi pi-fw pi-paperclip',\n            items: [{\n                label: 'Connect CSV',\n                icon: 'pi pi-fw pi-info',\n                command: null\n            },\n            {\n                label: 'Connect REST',\n                icon: 'pi pi-fw pi-list',\n                command: null\n            },\n            {\n                label: 'Connect Stream',\n                icon: 'pi pi-fw pi-list',\n                command: null\n            }\n            ]\n        },\n        {\n            label: 'Help',\n            icon: 'pi pi-fw pi-question',\n            items: [{\n                label: 'About',\n                icon: 'pi pi-fw pi-info',\n                command: null\n            }\n            ]\n        }\n        ];\n    }\n}\n","export class PreferencesModel {\n\tnamespace: string;\n\tname: string;\n\tvalue: string;\n\n\tconstructor(namespace: string, name: string, value: string) {\n\t\tthis.namespace = namespace;\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t}\n}","export class StatusModel {\n\terror: string;\n\tstatus: string;\n\tconstructor(error: string, status: string) {\n\t\tthis.error = error;\n\t\tthis.status = status;\n\t}\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActionNotificationService } from '../../services/action-notification.service';\nimport { ConfigService } from '../../services/config.service';\nimport { PreferencesService } from '../../services/preferences.service';\nimport { MapMessagesService } from '../../services/map-messages.service';\n\n@NgModule({})\nexport class SharedServicesModule { \n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SharedServicesModule,\n      providers: [ActionNotificationService, ConfigService, PreferencesService, MapMessagesService]\n    };\n  }\n }\n\nexport const SharedComponents = [];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhY2svY290LW1pbm90YXVyL2NvdC1taW5vdGF1ci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ag-grid-angular #agGridCot class=\\\"ag-theme-balham\\\" [rowData]=\\\"rowData\\\"\\n    [columnDefs]=\\\"columnDefinitions\\\" [domLayout]=\\\"domLayout\\\"\\n    (gridReady)=\\\"onGridReady($event)\\\" (firstDataRendered)=\\\"onFirstDataRendered($event)\\\">\\n</ag-grid-angular>\\n\"","import { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { Observable, Observer, of, Subject, EMPTY, Subscription, interval } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators'\n\nimport { GridOptions } from \"ag-grid-community\";\nimport { AgGridAngular } from 'ag-grid-angular';\n\nimport { ConfigModel } from '../../../models/config-model';\nimport { ConfigService } from '../../../services/config.service';\nimport { CotMinotaurService } from '../../../services/cot-minotaur.service';\nimport { MapMessagesService } from '../../../services/map-messages.service';\n\nimport {\n  MapViewModel, Bounds, LatLon, TimeSpanTime, TimeSpan\n} from '../../../models/map-view-model';\n\nimport {\n  CotTrackModel, CotTrackFeature, CotTrackCrs, CotTrackGeometry, CotTrackProperties\n} from '../../../models/cot-track-model';\n\n/* do not use providers in component for shared services */\n@Component({\n  selector: 'app-cot-minotaur',\n  templateUrl: './cot-minotaur.component.html',\n  styleUrls: ['./cot-minotaur.component.css']\n})\nexport class CotMinotaurComponent implements OnInit, OnDestroy {\n  config: ConfigModel = null;\n  mapStatusView: Subscription = null;\n  trackData: any = [];\n\n  @ViewChild('agGridCot') agGrid: AgGridAngular;\n  gridOptions: GridOptions;\n  columnDefinitions: any = [];\n\n  rowData: any[] = [];\n  cacheRowData: any[] = [];\n\n  domLayout = \"autoHeight\";\n\n  constructor(private configService: ConfigService,\n    private cotMinotaurSerice: CotMinotaurService,\n    private mapMessageService: MapMessagesService) {\n    this.gridOptions = <GridOptions>{\n      rowData: this.rowData,\n      columnDefs: this.createColumnDefs(),\n      context: {\n        componentParent: this\n      },\n      pagination: true\n    };\n  }\n\n  ngOnInit() {\n    this.config = this.configService.getConfig();\n\n    // do intial get on tracks\n    this.cotMinotaurSerice.getCotTracks().subscribe(\n      response => {\n        this.updateTrackData(response, true);\n      });\n\n    this.mapStatusView = this.mapMessageService.getMapView().subscribe(\n      mapView => {\n        console.log(mapView);\n      });\n\n    // start the refresh using timeout\n    setTimeout(() => {\n      interval(5000).pipe(\n        startWith(0),\n        switchMap(() => this.cotMinotaurSerice.getCotTracks())\n      ).subscribe(response => {\n        console.log(response);\n\n        this.updateTrackData(response);\n      });\n    }, 5000);\n  }\n\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.mapStatusView.unsubscribe();\n  }\n\n  private updateTrackData(response: CotTrackModel, initial?: boolean) {\n    console.log(response);\n\n    if (initial) {\n      this.trackData = [];\n\n      response.features.forEach(value => {\n        this.cacheRowData.push(value.id);\n\n        this.trackData.push({\n          id: value.id,\n          featureType: value.geometry.type,\n          name: value.properties.name,\n          type: value.properties.type,\n          category: value.properties.category,\n          class: value.properties.class,\n          alertLevel: value.properties.alertLevel,\n          threat: value.properties.threat,\n          dimension: value.properties.dimension,\n          flag: value.properties.flag,\n          speed: value.properties.speed,\n          dtg: value.properties.dtg,\n          altitude: value.properties.altitude,\n          course: value.properties.course,\n          classification: value.properties.classification\n        });\n      });\n\n      this.agGrid.api.setRowData(this.trackData);\n      console.log(this.trackData);\n    } else {\n      let addRows: any[] = [], updateRows: any[] = [], deleteRows: any[] = [];\n\n      response.features.forEach(value => {\n        if (this.cacheRowData.indexOf(value.id)) {\n          updateRows.push({\n            id: value.id,\n            featureType: value.geometry.type,\n            name: value.properties.name,\n            type: value.properties.type,\n            category: value.properties.category,\n            class: value.properties.class,\n            alertLevel: value.properties.alertLevel,\n            threat: value.properties.threat,\n            dimension: value.properties.dimension,\n            flag: value.properties.flag,\n            speed: value.properties.speed,\n            dtg: value.properties.dtg,\n            altitude: value.properties.altitude,\n            course: value.properties.course,\n            classification: value.properties.classification\n          });\n        } else {\n          addRows.push({\n            id: value.id,\n            featureType: value.geometry.type,\n            name: value.properties.name,\n            type: value.properties.type,\n            category: value.properties.category,\n            class: value.properties.class,\n            alertLevel: value.properties.alertLevel,\n            threat: value.properties.threat,\n            dimension: value.properties.dimension,\n            flag: value.properties.flag,\n            speed: value.properties.speed,\n            dtg: value.properties.dtg,\n            altitude: value.properties.altitude,\n            course: value.properties.course,\n            classification: value.properties.classification\n          });\n        }\n      });\n\n      console.log(addRows, updateRows, deleteRows);\n      this.agGrid.api.updateRowData({ add: addRows, update: updateRows, remove: deleteRows });\n    }\n  }\n\n  private createColumnDefs() {\n    this.columnDefinitions = [\n      { field: 'featureType', sortable: true },\n      { field: 'name', sortable: true, filterable: true },\n      { field: 'type', sortable: true, filterable: true },\n      { field: 'category', sortable: true, filterable: true },\n      { field: 'class', sortable: true, filterable: true },\n      { field: 'alertLevel', sortable: true, filterable: true },\n      { field: 'threat', sortable: true, filterable: true },\n      { field: 'dimension', sortable: true },\n      { field: 'flag', sortable: true, filterable: true },\n      { field: 'speed', sortable: true },\n      { field: 'dtg', sortable: true },\n      { field: 'altitude', sortable: true },\n      { field: 'course' },\n      { field: 'classification', filterable: true }\n    ];\n\n    return this.columnDefinitions;\n  }\n\n  onGridReady(event) {\n    console.log(event);\n    this.agGrid.gridOptions.getRowNodeId = function(data) {\n      console.log(data.id);\n      return data.id;\n    }\n  }\n\n  onFirstDataRendered(params) {\n    console.log(params);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { TabViewModule } from 'primeng/tabview';\nimport { CardModule } from 'primeng/card';\nimport { PanelModule } from 'primeng/panel';\n\nimport { AgGridModule } from 'ag-grid-angular';\nimport { SharedServicesModule } from '../shared-services/shared-services.module';\n\nimport { TrackCoreComponent } from './track-core/track-core.component';\nimport { CotMinotaurComponent } from './cot-minotaur/cot-minotaur.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'service', component: TrackCoreComponent, outlet: 'trackOutlet',\n    children: [\n      {\n        path: 'connect.rest',\n        component: CotMinotaurComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  declarations: [TrackCoreComponent, CotMinotaurComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(appRoutes),\n    FieldsetModule,\n    TabViewModule,\n    CardModule,\n    PanelModule,\n    AgGridModule.withComponents([]),\n    SharedServicesModule.forRoot()\n  ],\n  exports: [TrackCoreComponent, CotMinotaurComponent]\n})\nexport class TrackCoreModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhY2svdHJhY2stY29yZS90cmFjay1jb3JlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-track-core',\n  templateUrl: './track-core.component.html',\n  styleUrls: ['./track-core.component.css']\n})\nexport class TrackCoreComponent implements OnInit, OnDestroy {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionNotificationService {\n  // Observable string sources\n  private publisherSource = new Subject<string>();\n  private subscriberSource = new Subject<string>();\n\n  // Observable string streams\n  publisher$ = this.publisherSource.asObservable();\n  subscriber$ = this.subscriberSource.asObservable();\n\n  constructor() { }\n\n  // Service message commands\n  publisherAction(item: string) {\n    this.publisherSource.next(item);\n  }\n\n  subscriberAction(item: string) {\n    this.subscriberSource.next(item);\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { catchError, map, filter, switchMap, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport * as _ from 'lodash';\n\nimport { ConfigModel } from '../models/config-model';\n\nconst httpOptions = {\n\theaders: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ConfigService {\n\tconfig: Observable<ConfigModel> = null;\n\tconfigModel: ConfigModel = null;\n\tprivate baseUrl = 'assets/config.json';\n\n\tconstructor(private http: HttpClient) {\n\t\tthis.retrieveConfig();\n\t}\n\n\tprivate retrieveConfig(): void {\n\t\tthis.config = this.http\n\t\t\t.get<ConfigModel>(this.baseUrl, { responseType: 'json' })\n\t\t\t.pipe(\n\t\t\t\tcatchError(this.handleError('retrieveConfig', [])),\n\t\t\t\ttap(console.log));\n\n\t\tthis.config.subscribe(model => {\n\t\t\tthis.configModel = model;\n\t\t});\n\t}\n\n\tgetConfig() {\n\t\treturn this.configModel;\n\t}\n\n\tprivate handleError<T>(operation = 'operation', result?: T) {\n\t\treturn (error: any): Observable<T> => {\n\n\t\t\t// TODO: send the error to remote logging infrastructure\n\t\t\tconsole.error(error); // log to console instead\n\n\t\t\t// Let the app keep running by returning an empty result.\n\t\t\treturn of(result as T);\n\t\t};\n\t}\n}","import { Injectable } from '@angular/core';\nimport { Observable, Observer, of, Subject, EMPTY } from 'rxjs';\nimport { catchError, map, filter, switchMap, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport * as _ from 'lodash';\n\nimport { ConfigModel } from '../models/config-model';\nimport {\n  CotTrackModel, CotTrackFeature, CotTrackCrs, CotTrackGeometry, CotTrackProperties\n} from '../models/cot-track-model';\n\nimport { ConfigService } from './config.service';\nimport { MapMessagesService } from './map-messages.service';\nimport { NullTemplateVisitor } from '@angular/compiler';\nimport { dashCaseToCamelCase } from '@angular/animations/browser/src/util';\nimport { EMPTY_ARRAY } from '@angular/core/src/view';\n\ndeclare var OWF: any;\ndeclare var Ozone: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CotMinotaurService {\n  //trackUrl: string = 'https://localhost:4200/assets/testdata/testfile.json';\n  //trackUrl: string = 'https://localhost:8443/CotProviderSVC/rest/cotdummy/25';\n  trackUrl: string = '';\n  trackData: CotTrackModel = null;\n  configReady: boolean = false;\n  config: ConfigModel = null;\n\n  constructor(private http: HttpClient,\n    private configService: ConfigService,\n    private mapMessageService: MapMessagesService\n  ) {\n    this.config = this.configService.getConfig();\n    this.trackUrl = this.config.urls[\"CotService\"];\n  }\n\n  getCotTracks(): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      observe: 'response' as 'body',\n      withCredentials: true\n    };\n\n    let tracks = this.http\n      .get<any>(this.trackUrl, httpOptions)\n      .pipe(\n        tap(res => { this.processResponse(res); }),\n        map((data: any) => this.trackData = data.body),\n        catchError(this.handleError('getCotTracks', [])));\n\n    return tracks;\n  }\n\n  private processResponse(response) {\n    console.log(response.headers, response.status, response.type);\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer, of, Subject, EMPTY } from 'rxjs';\n\nimport * as _ from 'lodash';\nimport { OwfApi } from '../library/owf-api';\n\nimport {\n  MapViewModel, Bounds, LatLon, TimeSpanTime, TimeSpan\n} from '../models/map-view-model';\n\ndeclare var OWF: any;\ndeclare var Ozone: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapMessagesService {\n  owfapi = new OwfApi();\n  mapStatusView: Observable<MapViewModel> = null;\n\n  constructor() {\n    this.subscribeChannels();\n  }\n\n  private subscribeChannels() {\n    this.mapStatusView = new Observable<MapViewModel>((observer) => {\n      this.owfapi.addChannelSubscription('map.status.view', this.receiveMapStatusView.bind(this, observer));\n      this.owfapi.requestMapViewStatus();\n    });    \n  }\n\n  getMapView(): Observable<MapViewModel> {\n    return this.mapStatusView;\n  }\n\n  receiveMapStatusView(observer, sender, msg, channel) {\n    console.log(observer, sender, msg, channel);\n\n    let message = JSON.parse(msg);\n\n    let mBounds = new Bounds(message.bounds.southWest, message.bounds.northEast);\n    let mCenter = new LatLon(message.center.lat, message.center.lon);\n\n    let mTime = null;\n    if (message.timeExtent) {\n      let mTimeSpan = new TimeSpan(message.timeExtent.begin, message.timeExtent.end);\n      let mTimeSpans: TimeSpan[] = null;\n      if (message.timeExtent.timeSpans) {\n        mTimeSpans = [];\n\n        message.timeExtent.timeSpans.array.forEach(element => {\n          let ts = new TimeSpan(element.begin, element.end);\n          mTimeSpans.push(ts);\n        });\n      }\n\n      mTime = new TimeSpanTime(mTimeSpan, mTimeSpans, message.timeExtent.timeStamp);\n    }\n\n    let mapStatusView = new MapViewModel(mBounds, mCenter, message.range, message.scale,\n      message.zoom, message.basemap, message.spatialReference.wkid, message.coordinateFormat,\n      message.mapId, message.requester, mTime);\n\n    observer.next(mapStatusView);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer, of, Subject, EMPTY } from 'rxjs';\nimport { catchError, map, filter, switchMap, tap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport * as _ from 'lodash';\n\nimport { StatusModel } from '../models/status-model';\nimport { ConfigModel } from '../models/config-model';\nimport { PreferencesModel } from '../models/preferences-model';\n\nimport { ConfigService } from './config.service';\nimport { EMPTY_ARRAY } from '@angular/core/src/view';\n\ndeclare var OWF: any;\ndeclare var Ozone: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreferencesService {\n  status: Observable<StatusModel> = null;\n  preferences: Observable<PreferencesModel> = null;\n  config: ConfigModel = null;\n\n  constructor(private http: HttpClient,\n    private configService: ConfigService) {\n      this.config = this.configService.getConfig();\n  }\n\n  getPreference(namespace, name): Observable<PreferencesModel> {\n    this.preferences = new Observable((observer) => {\n      this.retrievePreference(observer, namespace, name);\n    });\n\n    return this.preferences;\n  }\n\n  private retrievePreference(observer, namespace, name) {\n    OWF.Preferences.getUserPreference({\n      namespace: namespace,\n      name: name,\n      onSuccess: this.onRetrievePreferenceSuccess.bind(this, observer),\n      onFailure: this.onRetrievePreferenceFailure.bind(this, observer)\n    });\n  }\n\n  private onRetrievePreferenceSuccess(observer, prefInfo) {\n    let preference = new PreferencesModel(prefInfo.namespace, prefInfo.name, prefInfo.value);\n\n    console.log('UserCore Service (retrievePreference) completed: ', preference);\n    observer.next(preference);\n  }\n\n  private onRetrievePreferenceFailure(observer, error, status) {\n    let preference: PreferencesModel = null;\n\n    console.log('UserCore Service (retrievePreference) error: ', error, status);\n    observer.next(preference);\n  }\n\n  setPreference(namespace, name, value): Observable<StatusModel> {\n    this.status = new Observable((observer) => {\n      this.storePreference(observer, namespace, name, value);\n    });\n\n    return this.status;\n  }\n\n  private storePreference(observer, namespace, name, value) {\n    OWF.Preferences.setUserPreference({\n      namespace: namespace,\n      name: name,\n      value: JSON.stringify(value),\n      onSuccess: this.storePreferenceSuccess.bind(this, observer),\n      onFailure: this.storePreferenceError.bind(this, observer)\n    });\n  }\n\n  private storePreferenceSuccess(observer, prefValue) {\n    let statusx = new StatusModel(\"200\", \"\");\n\n    console.log('UserCore Service (storePreferenceSuccess) completed: ', prefValue);\n    observer.next(statusx);\n  }\n\n  private storePreferenceError(observer, error, status) {\n    let statusx = new StatusModel(error, status);\n\n    console.log('UserCore Service (storePreferenceError) error: ', error, status);\n    observer.next(statusx);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport * as JQ from 'jquery';\nimport { OwfApi } from './app/library/owf-api';\n\ndeclare var OWF: any;\ndeclare var Ozone: any;\n\nif (environment.production) {\n\tenableProdMode();\n}\n\n// add document/OWF ready check state\nJQ(document).ready(function() {\n\tOWF.ready(function() {\n\t\tlet owfapi = new OwfApi();\n\t\towfapi.initialize();\n\n\t\tplatformBrowserDynamic().bootstrapModule(AppModule)\n\t\t\t.catch(err => console.error(err));\n\t});\n});"],"sourceRoot":""}